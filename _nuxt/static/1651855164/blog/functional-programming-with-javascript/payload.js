__NUXT_JSONP__("/blog/functional-programming-with-javascript", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR,aS,aT,aU,aV,aW,aX,aY,aZ,a_,a$,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,bA,bB,bC,bD,bE,bF,bG,bH,bI,bJ,bK,bL,bM,bN,bO,bP,bQ,bR,bS,bT,bU,bV,bW,bX,bY,bZ,b_,b$,ca){return {data:[{page:{slug:"functional-programming-with-javascript",description:"Do you stress about how to organize and structure your code? How should you store your variables? Should your arguments be passed by value or reference? How should your functions present their results? Should your program hold an internal state? Using functional programming, all your questions will be answered.",title:"Functional Programming with JavaScript",tags:["Technical"],image:"articles\u002Ffunctional-programming-with-javascript\u002Fabacus.jpg",author:"Gonçalo Marantes",publishedAt:"2021-10-25",time:"15 minutes",toc:[{id:aK,depth:af,text:aL},{id:aM,depth:af,text:aN},{id:aO,depth:L,text:aP},{id:aQ,depth:L,text:aR},{id:aS,depth:af,text:aT},{id:aU,depth:L,text:aV},{id:aW,depth:L,text:aX},{id:aY,depth:L,text:aZ},{id:a_,depth:L,text:a$},{id:ba,depth:L,text:bb},{id:bc,depth:af,text:bd},{id:be,depth:L,text:bf},{id:bg,depth:L,text:bh},{id:bi,depth:L,text:bj},{id:bk,depth:L,text:bl},{id:bm,depth:L,text:bn},{id:bo,depth:af,text:bp},{id:bq,depth:af,text:br}],body:{type:"root",children:[{type:b,tag:ag,props:{id:aK},children:[{type:b,tag:u,props:{href:"#paradigm-whats-that",ariaHidden:v,tabIndex:w},children:[{type:b,tag:c,props:{className:[x,y]},children:[]}]},{type:a,value:aL}]},{type:a,value:g},{type:b,tag:r,props:{},children:[{type:a,value:"In a nutshell, a programming paradigm is a way to classify a programming language based on its features, such as syntax, grammar and execution model. There are many paradigms out there, some of which are even subsets of each other, "},{type:b,tag:_,props:{},children:[{type:a,value:"so don't think about a paradigm as something mutually exclusive"}]},{type:a,value:". For example, Python is both imperative, object-oriented, procedural and functional."}]},{type:a,value:g},{type:b,tag:r,props:{},children:[{type:a,value:"There has always been a lot of buzz regarding Object-Oriented Programming. In fact many of the code examples we see online for newbie programmers is the cliché "},{type:b,tag:s,props:{},children:[{type:a,value:"Animal class"}]},{type:a,value:" that is inherited by "},{type:b,tag:s,props:{},children:[{type:a,value:"Dog"}]},{type:a,value:aq},{type:b,tag:s,props:{},children:[{type:a,value:"Cat"}]},{type:a,value:" classes."}]},{type:a,value:g},{type:b,tag:ag,props:{id:aM},children:[{type:b,tag:u,props:{href:"#functional-vs-object-oriented",ariaHidden:v,tabIndex:w},children:[{type:b,tag:c,props:{className:[x,y]},children:[]}]},{type:a,value:aN}]},{type:a,value:g},{type:b,tag:r,props:{},children:[{type:a,value:"The first question we need an answer to is: \"Is OOP so popular due to its paradigm exclusive features?\", it might look like at first glance, but in reality that is not the case. Let's take a look at main OOP features and we can achieve the same thing with functional programming."}]},{type:a,value:g},{type:b,tag:M,props:{id:aO},children:[{type:b,tag:u,props:{href:"#information-hiding-encapsulation",ariaHidden:v,tabIndex:w},children:[{type:b,tag:c,props:{className:[x,y]},children:[]}]},{type:a,value:aP}]},{type:a,value:g},{type:b,tag:r,props:{},children:[{type:a,value:"We have learnt to hide information inside our classes, in OOP we do it using "},{type:b,tag:s,props:{},children:[{type:a,value:"access control"}]},{type:a,value:" keywords, that is "},{type:b,tag:s,props:{},children:[{type:a,value:bs}]},{type:a,value:", "},{type:b,tag:s,props:{},children:[{type:a,value:ar}]},{type:a,value:", and so on. We then only allow the manipulation of these values using "},{type:b,tag:s,props:{},children:[{type:a,value:"getters"}]},{type:a,value:aq},{type:b,tag:s,props:{},children:[{type:a,value:"setters"}]},{type:a,value:C}]},{type:a,value:g},{type:b,tag:F,props:{className:[G]},children:[{type:b,tag:H,props:{className:[I,J]},children:[{type:b,tag:s,props:{},children:[{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:"class"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,ak]},children:[{type:a,value:"MyClass"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:U}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:bs}]},{type:a,value:" privateAttribute\n    "},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:ar}]},{type:a,value:" publicAttribute\n\n    "},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:ar}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"getPrivateAttribute"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:U}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l,as]},children:[{type:a,value:ay}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:az}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:bt}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:E}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:ar}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"setPrivateAttribute"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:bu}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:U}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:az}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:bt}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:q}]},{type:a,value:" attr "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:E}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:E}]},{type:a,value:g}]}]}]},{type:a,value:g},{type:b,tag:r,props:{},children:[{type:a,value:"Can we get a similar behavior in functional programming? Yes, as long as the language your using has a module system. So the information you want to be public can be exported from the module and imported from other modules. Everything else that is not exported can only be used inside the module."}]},{type:a,value:g},{type:b,tag:F,props:{className:[G]},children:[{type:b,tag:H,props:{className:[I,J]},children:[{type:b,tag:s,props:{},children:[{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:at}]},{type:a,value:bv},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:at}]},{type:a,value:" publicVar\n\n"},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:t}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,N,k]},children:[{type:a,value:"getPrivateAttribure"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,A,h]},children:[{type:a,value:B}]},{type:a,value:bv},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:t}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,N,k]},children:[{type:a,value:"setPrivateAttribure"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:bu}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,A,h]},children:[{type:a,value:B}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:az}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:"publicVar"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:q}]},{type:a,value:" attr\n\n"},{type:b,tag:c,props:{className:[d,l,"module"]},children:[{type:a,value:"export"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,"exports"]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:U}]},{type:a,value:" publicVar"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:" getPrivateAttribure"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:" setPrivateAttribure "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:E}]}]},{type:a,value:g}]}]}]},{type:a,value:g},{type:b,tag:M,props:{id:aQ},children:[{type:b,tag:u,props:{href:"#inheritance",ariaHidden:v,tabIndex:w},children:[{type:b,tag:c,props:{className:[x,y]},children:[]}]},{type:a,value:aR}]},{type:a,value:g},{type:b,tag:r,props:{},children:[{type:a,value:"You can make the case that inheritance is exclusive to OOP, and you'd be 100%. However, on must ask \"Is inheritance really that big of a feature? Is it really a game changer?\". In order to answer these questions I'll just leave you with this paragraph from Wikipedia."}]},{type:a,value:g},{type:b,tag:"blockquote",props:{},children:[{type:a,value:g},{type:b,tag:r,props:{},children:[{type:b,tag:V,props:{},children:[{type:a,value:"Composition over inheritance (or composite reuse principle) in object-oriented programming (OOP) is the principle that classes should achieve polymorphic behavior and code reuse by their composition (by containing instances of other classes that implement the desired functionality) rather than inheritance from a base or parent class. This is an often-stated principle of OOP, such as in the influential book Design Patterns (1994). - in Wikipedia ("}]},{type:b,tag:u,props:{href:bw,rel:[bx,by,bz],target:bA},children:[{type:a,value:bw}]},{type:a,value:i}]},{type:a,value:g}]},{type:a,value:g},{type:b,tag:r,props:{},children:[{type:a,value:"So as you can see, one of the most influential books in Software Engineering promotes the use of composition over inheritance. And composition is easily replicated in any programming paradigm. "},{type:b,tag:_,props:{},children:[{type:a,value:"Without inheritance, objects and methods are just sugar coated structs and procedures."}]}]},{type:a,value:g},{type:b,tag:ag,props:{id:aS},children:[{type:b,tag:u,props:{href:"#what-makes-functional-programming-functional",ariaHidden:v,tabIndex:w},children:[{type:b,tag:c,props:{className:[x,y]},children:[]}]},{type:a,value:aT}]},{type:a,value:g},{type:b,tag:r,props:{},children:[{type:a,value:"After bashing over on the most popular programming paradigms, let's understand the main features of functional programming."}]},{type:a,value:g},{type:b,tag:M,props:{id:aU},children:[{type:b,tag:u,props:{href:"#do-everything-with-functions",ariaHidden:v,tabIndex:w},children:[{type:b,tag:c,props:{className:[x,y]},children:[]}]},{type:a,value:aV}]},{type:a,value:g},{type:b,tag:r,props:{},children:[{type:a,value:"This might sound like a pleonasm, but it is important to understand that "},{type:b,tag:_,props:{},children:[{type:a,value:"every input produces an output"}]},{type:a,value:". Hence, it is important to think about the flow of data, that is the inputs and outputs instead of thinking about objects and how they interact and which state they are in."}]},{type:a,value:g},{type:b,tag:F,props:{className:[G]},children:[{type:b,tag:H,props:{className:[I,J]},children:[{type:b,tag:s,props:{},children:[{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"\u002F\u002F non functional (imperative style)"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:t}]},{type:a,value:bB},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:$}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:t}]},{type:a,value:" greeting "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:"'Hello'"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,W,ak]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,P,k,D]},children:[{type:a,value:au}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,al]},children:[{type:b,tag:c,props:{className:[d,Q,p]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,aa]},children:[{type:b,tag:c,props:{className:[d,K,e]},children:[{type:a,value:ab}]},{type:a,value:"gretting"},{type:b,tag:c,props:{className:[d,K,e]},children:[{type:a,value:E}]}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:f}]},{type:b,tag:c,props:{className:[d,aa]},children:[{type:b,tag:c,props:{className:[d,K,e]},children:[{type:a,value:ab}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,K,e]},children:[{type:a,value:E}]}]},{type:b,tag:c,props:{className:[d,Q,p]},children:[{type:a,value:R}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:g}]}]}]},{type:a,value:g},{type:b,tag:F,props:{className:[G]},children:[{type:b,tag:H,props:{className:[I,J]},children:[{type:b,tag:s,props:{},children:[{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"\u002F\u002F functional"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:t}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,N,k]},children:[{type:a,value:bC}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:T}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,A,h]},children:[{type:a,value:B}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,al]},children:[{type:b,tag:c,props:{className:[d,Q,p]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:aA}]},{type:b,tag:c,props:{className:[d,aa]},children:[{type:b,tag:c,props:{className:[d,K,e]},children:[{type:a,value:ab}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,K,e]},children:[{type:a,value:E}]}]},{type:b,tag:c,props:{className:[d,Q,p]},children:[{type:a,value:R}]}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,W,ak]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,P,k,D]},children:[{type:a,value:au}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:bC}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:$}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:g}]}]}]},{type:a,value:g},{type:b,tag:M,props:{id:aW},children:[{type:b,tag:u,props:{href:"#no-side-effects",ariaHidden:v,tabIndex:w},children:[{type:b,tag:c,props:{className:[x,y]},children:[]}]},{type:a,value:aX}]},{type:a,value:g},{type:b,tag:r,props:{},children:[{type:a,value:"What exactly is a side effect? It basically is anything that a function might do that isn't computing its outputs from the inputs and returning that output. So a function that uses or updates anything out of its scope is changing the program state and therefore it might be considered as \"not pure\". Here's the following example."}]},{type:a,value:g},{type:b,tag:F,props:{className:[G]},children:[{type:b,tag:H,props:{className:[I,J]},children:[{type:b,tag:s,props:{},children:[{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"\u002F\u002F not pure function"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"\u002F\u002F global variable (state)"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:t}]},{type:a,value:bB},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:$}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:t}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,N,k]},children:[{type:a,value:aB}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,A,h]},children:[{type:a,value:B}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:U}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"\u002F\u002F printing to the console is also considered a \"side effect\""}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,W,ak]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,P,k,D]},children:[{type:a,value:au}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,al]},children:[{type:b,tag:c,props:{className:[d,Q,p]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:aA}]},{type:b,tag:c,props:{className:[d,aa]},children:[{type:b,tag:c,props:{className:[d,K,e]},children:[{type:a,value:ab}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,K,e]},children:[{type:a,value:E}]}]},{type:b,tag:c,props:{className:[d,Q,p]},children:[{type:a,value:R}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:E}]},{type:a,value:g}]}]}]},{type:a,value:g},{type:b,tag:F,props:{className:[G]},children:[{type:b,tag:H,props:{className:[I,J]},children:[{type:b,tag:s,props:{},children:[{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"\u002F\u002F pure function"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:t}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,N,k]},children:[{type:a,value:aB}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:T}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,A,h]},children:[{type:a,value:B}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,al]},children:[{type:b,tag:c,props:{className:[d,Q,p]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:aA}]},{type:b,tag:c,props:{className:[d,aa]},children:[{type:b,tag:c,props:{className:[d,K,e]},children:[{type:a,value:ab}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,K,e]},children:[{type:a,value:E}]}]},{type:b,tag:c,props:{className:[d,Q,p]},children:[{type:a,value:R}]}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:aB}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:$}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:g}]}]}]},{type:a,value:g},{type:b,tag:r,props:{},children:[{type:a,value:"The goal here is to make every function completely independent. And not relying on program state offers a set of advantages that we will find more about soon enough!"}]},{type:a,value:g},{type:b,tag:M,props:{id:aY},children:[{type:b,tag:u,props:{href:"#higher-order-functions",ariaHidden:v,tabIndex:w},children:[{type:b,tag:c,props:{className:[x,y]},children:[]}]},{type:a,value:aZ}]},{type:a,value:g},{type:b,tag:r,props:{},children:[{type:a,value:"This means functions that can take as input other functions, or even a function that can return a function as its output. And by using this, we can achieve behavior that is quite similar to objects."}]},{type:a,value:g},{type:b,tag:F,props:{className:[G]},children:[{type:b,tag:H,props:{className:[I,J]},children:[{type:b,tag:s,props:{},children:[{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"\u002F\u002F returns function"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:t}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,N,k]},children:[{type:a,value:aC}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:bD}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,A,h]},children:[{type:a,value:B}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:T}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,A,h]},children:[{type:a,value:B}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,al]},children:[{type:b,tag:c,props:{className:[d,Q,p]},children:[{type:a,value:R}]},{type:b,tag:c,props:{className:[d,aa]},children:[{type:b,tag:c,props:{className:[d,K,e]},children:[{type:a,value:ab}]},{type:a,value:T},{type:b,tag:c,props:{className:[d,K,e]},children:[{type:a,value:E}]}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:" is "}]},{type:b,tag:c,props:{className:[d,aa]},children:[{type:b,tag:c,props:{className:[d,K,e]},children:[{type:a,value:ab}]},{type:a,value:bD},{type:b,tag:c,props:{className:[d,K,e]},children:[{type:a,value:E}]}]},{type:b,tag:c,props:{className:[d,Q,p]},children:[{type:a,value:R}]}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:t}]},{type:a,value:" cool "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:aC}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:"'cool'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:t}]},{type:a,value:" nice "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:aC}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:"'nice'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"cool"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:$}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"\u002F\u002F Gonçalo is cool"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"nice"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:$}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"\u002F\u002F Gonçalo is nice"}]},{type:a,value:g}]}]}]},{type:a,value:g},{type:b,tag:F,props:{className:[G]},children:[{type:b,tag:H,props:{className:[I,J]},children:[{type:b,tag:s,props:{},children:[{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"\u002F**\n * reducer -\u003E function\n * initial -\u003E initial value\n *   x -\u003E first element of the array\n *   arr -\u003E rest of array to reduce\n *\u002F"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:t}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,N,k]},children:[{type:a,value:am}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:aD},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:" initial"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Y}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,av,h]},children:[{type:a,value:aw}]},{type:a,value:ai},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Z}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,A,h]},children:[{type:a,value:B}]},{type:a,value:bE},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aE}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l,bF]},children:[{type:a,value:bG}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"\u002F\u002F return initial if array is empty"}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:bH}]},{type:a,value:" initial\n    "},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"\u002F\u002F reduce first element and continue reducer with the rest of the array"}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:bI}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:am}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:aD},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:aD}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"initial"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:bJ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:bK},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:am}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:"acc"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:bL}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,A,h]},children:[{type:a,value:B}]},{type:a,value:" acc "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ax}]},{type:a,value:bL},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:aj}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Y}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:an}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:ac}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:ad}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"\u002F\u002F 6"}]},{type:a,value:g}]}]}]},{type:a,value:g},{type:b,tag:M,props:{id:a_},children:[{type:b,tag:u,props:{href:"#immutable-data---dont-update-create",ariaHidden:v,tabIndex:w},children:[{type:b,tag:c,props:{className:[x,y]},children:[]}]},{type:a,value:a$}]},{type:a,value:g},{type:b,tag:r,props:{},children:[{type:a,value:"Imagine you want to iterate over an array, and perform some operation on its values, such as filtering values. One of the most important aspects of functional programming is that it is completely stateless. Hence, if you want to update this array you simply need to create a new one that is already filtered. Here is an example:"}]},{type:a,value:g},{type:b,tag:F,props:{className:[G]},children:[{type:b,tag:H,props:{className:[I,J]},children:[{type:b,tag:s,props:{},children:[{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:t}]},{type:a,value:bM},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Y}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:$}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:"'Gary'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:"'Mike'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:"'Guy'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:"'Peter'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:"'Gustaff'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Z}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:t}]},{type:a,value:" filteredArr "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:q}]},{type:a,value:bK},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,P,k,D]},children:[{type:a,value:aF}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:T}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,A,h]},children:[{type:a,value:B}]},{type:a,value:" name"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,P,k,D]},children:[{type:a,value:"startsWith"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:"'G'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:g}]}]}]},{type:a,value:g},{type:b,tag:r,props:{},children:[{type:a,value:"By creating new variables instead of updating them, we can be sure that our variables have the same values throughout the whole program execution. "},{type:b,tag:_,props:{},children:[{type:a,value:"This contributes to the predictability of our programs."}]},{type:a,value:" And if our programs are predictable than they are easier to analyze and debug."}]},{type:a,value:g},{type:b,tag:M,props:{id:ba},children:[{type:b,tag:u,props:{href:"#recursion-over-iteration",ariaHidden:v,tabIndex:w},children:[{type:b,tag:c,props:{className:[x,y]},children:[]}]},{type:a,value:bb}]},{type:a,value:g},{type:b,tag:r,props:{},children:[{type:a,value:"Now let's imagine that we want to reverse the order of an array. It is easier to think about iteration and loops, but if you look at the code example below, you can clearly understand that you code is much more compact."}]},{type:a,value:g},{type:b,tag:F,props:{className:[G]},children:[{type:b,tag:H,props:{className:[I,J]},children:[{type:b,tag:s,props:{},children:[{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"\u002F\u002F imperative (loops)"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:t}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,N,k]},children:[{type:a,value:aG}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:ai}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,A,h]},children:[{type:a,value:B}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:U}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:at}]},{type:a,value:"  clone "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Y}]},{type:b,tag:c,props:{className:[d,av,h]},children:[{type:a,value:aw}]},{type:a,value:ai},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Z}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,l,as]},children:[{type:a,value:"for"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:at}]},{type:a,value:aH},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:aj}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:bN}]},{type:a,value:aH},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"\u003C"}]},{type:a,value:bO},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:"length"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"\u002F"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:ac}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:bN}]},{type:a,value:bP},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"++"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:U}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"switchVals"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:"clone"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:bP},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:bO},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:"lenght"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:bQ}]},{type:a,value:aH},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:bQ}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:an}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"\u002F\u002F random function that switches values"}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:E}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,l,as]},children:[{type:a,value:ay}]},{type:a,value:" clone\n"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:E}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"\u002F\u002F declarative (recursion)"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:t}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,N,k]},children:[{type:a,value:aG}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,z]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Y}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,av,h]},children:[{type:a,value:aw}]},{type:a,value:ai},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Z}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,A,h]},children:[{type:a,value:B}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"\u002F\u002F ES6 destructuring"}]},{type:a,value:bE},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"!="}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l,bF]},children:[{type:a,value:bG}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:bH}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Y}]},{type:b,tag:c,props:{className:[d,av,h]},children:[{type:a,value:aw}]},{type:b,tag:c,props:{className:[d,P,k,D]},children:[{type:a,value:aG}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:ai},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:bJ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Z}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:bI}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Y}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Z}]},{type:a,value:g}]}]}]},{type:a,value:g},{type:b,tag:r,props:{},children:[{type:a,value:"Keep in mind that iterations have state ("},{type:b,tag:s,props:{},children:[{type:a,value:"i"}]},{type:a,value:" variable keeps changing), whereas r"},{type:b,tag:_,props:{},children:[{type:a,value:"ecursion is static and predictable (the same inputs produce the same outputs)."}]}]},{type:a,value:g},{type:b,tag:r,props:{},children:[{type:a,value:"You might ask yourself \"But doesn't that increase space complexity in our program?\", and you're right! That is why "},{type:b,tag:_,props:{},children:[{type:a,value:"Garbage Collection"}]},{type:a,value:aq},{type:b,tag:_,props:{},children:[{type:a,value:"Persistent Data Structures"}]},{type:a,value:" are important concepts to make functional programming more effective. These are topics that I will write about in the future."}]},{type:a,value:g},{type:b,tag:ag,props:{id:bc},children:[{type:b,tag:u,props:{href:"#what-cool-features-does-functional-programming-hold",ariaHidden:v,tabIndex:w},children:[{type:b,tag:c,props:{className:[x,y]},children:[]}]},{type:a,value:bd}]},{type:a,value:g},{type:b,tag:M,props:{id:be},children:[{type:b,tag:u,props:{href:"#function-composition",ariaHidden:v,tabIndex:w},children:[{type:b,tag:c,props:{className:[x,y]},children:[]}]},{type:a,value:bf}]},{type:a,value:g},{type:b,tag:r,props:{},children:[{type:a,value:"We've probably already heard of Function Composition sometime when studying mathematics. Basically, it is an operation that takes two functions "},{type:b,tag:V,props:{},children:[{type:a,value:ao}]},{type:a,value:aq},{type:b,tag:V,props:{},children:[{type:a,value:bR}]},{type:a,value:" and produces a function "},{type:b,tag:V,props:{},children:[{type:a,value:"h"}]},{type:a,value:" such that "},{type:b,tag:V,props:{},children:[{type:a,value:"h(x) = g(f(x)) ="}]},{type:a,value:" ("},{type:b,tag:V,props:{},children:[{type:a,value:bR}]},{type:a,value:" ∘ "},{type:b,tag:V,props:{},children:[{type:a,value:ao}]},{type:a,value:" )("},{type:b,tag:V,props:{},children:[{type:a,value:S}]},{type:a,value:")."}]},{type:a,value:g},{type:b,tag:r,props:{},children:[{type:a,value:"Function chaining achieves the same output, however the syntax is somewhat different. The example bellow illustrates these two concepts:"}]},{type:a,value:g},{type:b,tag:F,props:{className:[G]},children:[{type:b,tag:H,props:{className:[I,J]},children:[{type:b,tag:s,props:{},children:[{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:t}]},{type:a,value:bM},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Y}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:an}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:ac}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:ad}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:bS}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:"5"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:"6"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:bT}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:"8"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:bU}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:bU}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Z}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"\u002F\u002F chaining - obj.f().g().h()"}]},{type:a,value:"\narr\n  "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,P,k,D]},children:[{type:a,value:bV}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:S}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,A,h]},children:[{type:a,value:B}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:bW}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:ac}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"\u002F\u002F [2, 4, 6, 8, 10, ..., 18]"}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,P,k,D]},children:[{type:a,value:aF}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:S}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,A,h]},children:[{type:a,value:B}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:bX}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:ad}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aE}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:aj}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"\u002F\u002F [6, 12, 18]"}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,P,k,D]},children:[{type:a,value:am}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:S},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:aI}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,A,h]},children:[{type:a,value:B}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ax}]},{type:a,value:aI},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:aj}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:bY}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"\u002F\u002F function composition - pipe(f,g,h)(obj)"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"\u002F\u002F can be considered as better because it"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"\u002F\u002F separates concerns and places functions"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"\u002F\u002F in the center"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"\u002F\u002F (remember the decorator design pattern?)"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:t}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,N,k]},children:[{type:a,value:bZ}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:S}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,A,h]},children:[{type:a,value:B}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:bW}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:ac}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:t}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,N,k]},children:[{type:a,value:b_}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:S}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,A,h]},children:[{type:a,value:B}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:bX}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:ad}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aE}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:aj}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:t}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,N,k]},children:[{type:a,value:ap}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:S},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:aI}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,A,h]},children:[{type:a,value:B}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ax}]},{type:a,value:" y\n\n"},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:t}]},{type:a,value:" manipulate "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"pipe"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:bV}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:bZ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:aF}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:b_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:am}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:ap},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:aj}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"manipulate"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:ai},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:bY}]},{type:a,value:g}]}]}]},{type:a,value:g},{type:b,tag:M,props:{id:bg},children:[{type:b,tag:u,props:{href:"#remove-unused-calls",ariaHidden:v,tabIndex:w},children:[{type:b,tag:c,props:{className:[x,y]},children:[]}]},{type:a,value:bh}]},{type:a,value:g},{type:b,tag:r,props:{},children:[{type:a,value:"In a functional programming style, it is easy to follow the flow of data. Hence, it is simple to see which variables or functions are never used. In the following example, we understand that "},{type:b,tag:s,props:{},children:[{type:a,value:"z"}]},{type:a,value:" is never used after its creation. So the compiler\u002Ftranspiler should be able to understand that "},{type:b,tag:s,props:{},children:[{type:a,value:"f(y)"}]},{type:a,value:" does not need to be called and can be removed."}]},{type:a,value:g},{type:b,tag:F,props:{className:[G]},children:[{type:b,tag:H,props:{className:[I,J]},children:[{type:b,tag:s,props:{},children:[{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:t}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:ao}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:bS}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:t}]},{type:a,value:" y "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:ao}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:S},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:t}]},{type:a,value:" z "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:ao}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:b$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"\u002F\u002F z is never used, so f(y) may not be executed"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,W,ak]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,P,k,D]},children:[{type:a,value:au}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:b$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:g}]}]}]},{type:a,value:g},{type:b,tag:M,props:{id:bi},children:[{type:b,tag:u,props:{href:"#memoization-cache",ariaHidden:v,tabIndex:w},children:[{type:b,tag:c,props:{className:[x,y]},children:[]}]},{type:a,value:bj}]},{type:a,value:g},{type:b,tag:r,props:{},children:[{type:a,value:"We've seen before that functions are predictable, that is, the same input provides the same output. That said, in order to speed things up we can perform function memoization. Memoization is just a fancy term for caching. A simple implementation consists of mapping inputs to outputs, and when an input is used for the first time, the function is executed and its return value is stored. Whenever the same function is called with the same input values, the stored output is returned instead."}]},{type:a,value:g},{type:b,tag:F,props:{className:[G]},children:[{type:b,tag:H,props:{className:[I,J]},children:[{type:b,tag:s,props:{},children:[{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:k}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:ap}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:"b"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:U}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,l,as]},children:[{type:a,value:ay}]},{type:a,value:" a "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ax}]},{type:a,value:" b "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:E}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:t}]},{type:a,value:" memoAdd "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"memoize"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:ap},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"\u002F\u002F memoize() does not exist in plain JS,"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"\u002F\u002F but some libraries implement memoization"}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:aJ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:ac}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:ad}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"\u002F\u002F -\u003E 5, add called"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:aJ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:an}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:ad}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"\u002F\u002F -\u003E 4, add called"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:aJ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:ac}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:ad}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"\u002F\u002F -\u003E 5, add NOT called"}]},{type:a,value:g}]}]}]},{type:a,value:g},{type:b,tag:M,props:{id:bk},children:[{type:b,tag:u,props:{href:"#parallelization",ariaHidden:v,tabIndex:w},children:[{type:b,tag:c,props:{className:[x,y]},children:[]}]},{type:a,value:bl}]},{type:a,value:g},{type:b,tag:r,props:{},children:[{type:a,value:"Given that everything is executed within functions, and that every function is completely independent then it is easy to parallelize function execution. So functions can execute simultaneously increasing program performance. However, this is not really possible with JavaScript, but the concept still stands for other programming languages."}]},{type:a,value:g},{type:b,tag:F,props:{className:[G]},children:[{type:b,tag:H,props:{className:[I,J]},children:[{type:b,tag:s,props:{},children:[{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:ap}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"fibo"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:bT}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"sum"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:an}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:"100"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"\u002F\u002F run in parallel"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"\u002F\u002F not really a thing in JS"}]},{type:a,value:g}]}]}]},{type:a,value:g},{type:b,tag:M,props:{id:bm},children:[{type:b,tag:u,props:{href:"#testing",ariaHidden:v,tabIndex:w},children:[{type:b,tag:c,props:{className:[x,y]},children:[]}]},{type:a,value:bn}]},{type:a,value:g},{type:b,tag:r,props:{},children:[{type:a,value:"No setup required, each function is completely independent and easily tested on its own! It is usually easy to perform dependency injection when using functional programming."}]},{type:a,value:g},{type:b,tag:ag,props:{id:bo},children:[{type:b,tag:u,props:{href:"#if-functional-programming-is-so-cool-why-is-object-oriented-the-norm",ariaHidden:v,tabIndex:w},children:[{type:b,tag:c,props:{className:[x,y]},children:[]}]},{type:a,value:bp}]},{type:a,value:g},{type:b,tag:r,props:{},children:[{type:a,value:"Every programmer knows what a class is, but what they don't know is why they even learnt that in the first place! Are classes really the best way to handle most common scenarios? To understand how OOP got so popular in the first place, I recommend you take a look at "},{type:b,tag:u,props:{href:"https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=QyJZzq0v7Z4",rel:[bx,by,bz],target:bA},children:[{type:a,value:"this talk"}]},{type:a,value:" by Richard Feldman."}]},{type:a,value:g},{type:b,tag:ag,props:{id:bq},children:[{type:b,tag:u,props:{href:"#conclusion",ariaHidden:v,tabIndex:w},children:[{type:b,tag:c,props:{className:[x,y]},children:[]}]},{type:a,value:br}]},{type:a,value:g},{type:b,tag:r,props:{},children:[{type:a,value:"To sum up, don't take my take on functional programming as a silver bullet to solve all your problems. This is just one of many paradigms you can follow, it all boils down to your specific application, the development team and the programming language you end up choosing."}]},{type:a,value:g},{type:b,tag:r,props:{},children:[{type:a,value:"Feel free to tweet at me your opinion on functional programming."}]}]},dir:"\u002Fblog",path:"\u002Fblog\u002Ffunctional-programming-with-javascript",extension:".md",createdAt:ca,updatedAt:ca}}],fetch:[],mutations:void 0}}("text","element","span","token","punctuation"," ","\n","operator",")","(","function","keyword",",","comment","number","string","=","p","code","const","a","true",-1,"icon","icon-link","parameter","arrow","=\u003E",".","property-access","}","div","nuxt-content-highlight","pre","language-jsx","line-numbers","interpolation-punctuation",3,"h3","function-variable","\n  ","method","template-punctuation","`","x","name","{","em","console","\n\n","[","]","strong","'Gonçalo'","interpolation","${","2","3"," x ",2,"h2","\n    ","arr","0","class-name","template-string","reduce","1","f","add"," and ","public","control-flow","let","log","spread","...","+","return","this","Hello ","greet","createComplement","reducer","===","filter","reverse"," i "," y","memoAdd","paradigm-whats-that","Paradigm... what's that?","functional-vs-object-oriented","Functional vs Object-oriented","information-hiding-encapsulation","Information hiding (encapsulation)","inheritance","Inheritance","what-makes-functional-programming-functional","What makes functional programming functional?","do-everything-with-functions","Do everything with functions","no-side-effects","No side effects","higher-order-functions","Higher order functions","immutable-data---dont-update-create","Immutable Data - \"Don't update, create!\"","recursion-over-iteration","Recursion over iteration","what-cool-features-does-functional-programming-hold","What cool features does Functional Programming hold?","function-composition","Function Composition","remove-unused-calls","Remove unused calls","memoization-cache","Memoization (Cache)","parallelization","Parallelization","testing","Testing","if-functional-programming-is-so-cool-why-is-object-oriented-the-norm","If Functional Programming is so cool, why is Object-Oriented the \"norm\"?","conclusion","Conclusion","private","privateAttribute","attr"," privateVar\n","https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FComposition_over_inheritance","nofollow","noopener","noreferrer","_blank"," name ","buildGreeting","complement","\n  x ","nil","undefined","?",":"," x"," arr"," curr"," arr ",";"," clone"," i","-","g","4","7","9","map","*","%","\u002F\u002F 36","doubled","threeDivisible","y","2022-05-06T16:38:27.008Z")));